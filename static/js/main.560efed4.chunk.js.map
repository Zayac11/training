{"version":3,"sources":["Components/Print/Print.module.scss","Components/MapTest/MapTest.module.css","Components/YupInputs.jsx","redux/test-reducer.js","hoc/FormTest.js","Common/TextError.jsx","Components/Formik.jsx","Components/Hooks.jsx","Components/MapTest/MapTest.jsx","Components/TextEditor/Wysiwyg.jsx","Components/Print/ComponentToPrint.jsx","Components/Print/Print.jsx","Components/CameraPhoto/CameraPhoto.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","Components/Search/Search.module.scss","Components/Test.module.scss"],"names":["module","exports","YupInputs","props","state","name","age","website","email","phone","isValid","handleChange","bind","handleSubmit","e","value","target","this","setState","shape","setLocale","string","number","min","integer","positive","yup","required","url","validate","then","valid","console","log","catch","err","errors","type","placeholder","onChange","onClick","React","Component","compose","connect","data","test","SET_TOKEN","initialState","token","message","isEmailTaken","testReducer","action","mapStateToPropsForRedirect","className","children","useSelector","initialValues","validationSchema","onSubmit","values","enableReinitialize","htmlFor","id","component","TextError","fieldArrayProps","push","remove","phNumbers","form","map","phNumber","index","withRouter","FormTest","address","social","vk","inst","telephones","Yup","max","of","useState","useDispatch","useEffect","history","Formik","s","defaultState","center","zoom","defaultGeometry","defaultProperties","iconCaption","defaultOptions","preset","iconColor","size","content","ComponentToPrint","container","PureComponent","CameraPhoto","photo","setPhoto","idealFacingMode","FACING_MODES","ENVIRONMENT","isFullscreen","onTakePhoto","dataUri","handleTakePhoto","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.560efed4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Print_container__2nUDC\",\"print\":\"Print_print__pykgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"MapTest_map__2AES_\"};","import React from \"react\";\r\nimport * as yup from 'yup'\r\nimport { setLocale } from 'yup';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass YupInputs extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            age: '',\r\n            website: '',\r\n            email: '',\r\n            phone: '',\r\n\r\n            isValid: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        let value = e.target.value\r\n        let name = e.target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    validate(shape) {\r\n\r\n        setLocale({\r\n            string: {\r\n                name: 'Заполните имя'\r\n            },\r\n            number: {\r\n                min: `Минимальный возраст - 18 лет`,\r\n                integer: `Число должно быть целым`,\r\n                positive: `Число должно быть положительным`,\r\n            },\r\n        });\r\n\r\n        let schema = yup.object().shape({\r\n            name: yup.string().required('Заполните имя'),\r\n            age: yup.number('Заполни блинб').positive().integer().min(18),\r\n            website: yup.string().url('Это не website, кого обманываешь?'),\r\n            email: yup.string().required('Заполните email').email('Это не email, кого обманываешь?'),\r\n        });\r\n\r\n        //Если не сработает catch, то будет then и там уже можно вызвать метод из глобал стейта\r\n        schema\r\n            .validate(shape)\r\n            .then(function (valid) {\r\n\r\n                console.log(valid);\r\n            })\r\n            .catch(function (err) {\r\n\r\n                console.log(err.errors);\r\n            })\r\n            //shape - это данные\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.validate({\r\n            name: this.state.name,\r\n            age: this.state.age === '' ? 0 : this.state.age,\r\n            website: this.state.website,\r\n            email: this.state.email,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div><input type=\"text\" value={this.state.name} placeholder={'Имя'} name='name' onChange={this.handleChange}/></div>\r\n                <div><input type=\"number\" value={this.state.age} placeholder={'Возраст'} name='age' onChange={this.handleChange}/></div>\r\n                <div><input type=\"url\" value={this.state.website} placeholder={'Сайт'} name='website' onChange={this.handleChange}/></div>\r\n                <div><input type=\"email\" value={this.state.email} placeholder={'Почта'} name='email' onChange={this.handleChange}/></div>\r\n\r\n                <button onClick={this.handleSubmit}>submit</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        data: state.test.data\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {})\r\n)(YupInputs)\r\n","\r\nconst SET_TOKEN = 'SET_TOKEN'\r\n\r\n\r\nlet initialState = {\r\n    token: \"\",\r\n\r\n    data: [\r\n        {\r\n          name: 'Paul', age: 22, email: 'paul@mail.ru', website: 'vk.com'\r\n        },\r\n        {\r\n          name: 'Jenya', age: 25, email: 'jenya@mail.ru', website: 'vk.com'\r\n        },\r\n        {\r\n          name: 'Oleg', age: 30, email: 'oleg@mail.ru', website: 'vk.com'\r\n        },\r\n    ],\r\n    message: 'Это хуки, чекай',\r\n\r\n    isEmailTaken: true,\r\n\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setToken = (token) => ({type: SET_TOKEN, token})\r\nexport const getUserArtifactData = (artifact_id) => {\r\n    return (dispatch, getState) => {\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport const FormTest = (Component) => {\r\n\r\n    class FormTest extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                name: '',\r\n                email: '',\r\n                address: '',\r\n                social: {\r\n                    vk: '',\r\n                    inst: '',\r\n                },\r\n                telephones: ['', ''],\r\n                phNumbers: [''],\r\n            }\r\n        }\r\n\r\n\r\n        render() {\r\n\r\n            const initialValues = {\r\n                name: '',\r\n                email: '',\r\n                address: '',\r\n                social: {\r\n                    vk: '',\r\n                    inst: '',\r\n                },\r\n                telephones: ['', ''],\r\n                phNumbers: [''],\r\n            }\r\n\r\n            const setState = (props) => {\r\n                initialValues.name = props.name\r\n                initialValues.email = 'asasdsda@mail.ru'\r\n                initialValues.address = 'asdjkasd'\r\n            }\r\n\r\n            let validationSchema = Yup.object({\r\n                name: Yup.string()\r\n                    .max(15, '15 символов или меньше youpta'),\r\n                    // .required('Имя Required bitch'),\r\n\r\n                email: Yup.string()\r\n                    .email('Адрес гавно polnoe'),\r\n                    // .required('address Required'),\r\n                address: Yup.string() //для примера, что без required всё работает\r\n                    .max(15, '15 символов или меньше address'),\r\n                    // .required('address Required'),\r\n                social: Yup.object({\r\n                    vk: Yup.string(),\r\n                        // .required('vk Required bitch'),\r\n                    inst: Yup.string(),\r\n                        // .required('inst Required bitch'),\r\n                }),\r\n                telephones: Yup.array()\r\n                    .of(Yup.string()\r\n                        // .required('Текст чи шо')\r\n                )\r\n            })\r\n            return (\r\n                <>\r\n                    <Component {...this.props}\r\n                               initialValues={initialValues}\r\n                               setState={setState}\r\n                               validationSchema={validationSchema}\r\n                    />\r\n                </>\r\n                )\r\n        }\r\n\r\n\r\n    }\r\n\r\nlet ConnectedCommonFormTestComponent = connect(mapStateToPropsForRedirect)(FormTest);\r\n\r\nreturn ConnectedCommonFormTestComponent;\r\n}\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={'form__error'}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n\r\n)(TextError)\r\n","import React, {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray} from 'formik'\r\nimport {compose} from \"redux\";\r\nimport TextError from \"../Common/TextError\";\r\nimport {FormTest} from \"../hoc/FormTest\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst SignupForm = (props) => {\r\n\r\n    const isEmailTaken = useSelector(state => state.test.isEmailTaken);\r\n\r\n    return (\r\n        <Formik initialValues={props.initialValues}\r\n                validationSchema={props.validationSchema}\r\n                onSubmit={props.onSubmit}\r\n                validate={values => {\r\n                    let errors = {}\r\n                    if(isEmailTaken) {\r\n                        errors.email = 'Email is Already taken'\r\n                    }\r\n                    return errors;\r\n                }}\r\n                enableReinitialize\r\n        >\r\n            <Form>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <Field\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        //{...formik.getFieldProps('name')}\r\n                        // onChange={formik.handleChange}\r\n                        // onBlur={formik.handleBlur}\r\n                        // value={formik.values.name}\r\n                    />\r\n                    <ErrorMessage name=\"name\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <Field\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                    />\r\n                    <ErrorMessage name=\"email\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"vk\">Vk</label>\r\n                    <Field\r\n                        id=\"vk\"\r\n                        type=\"text\"\r\n                        name=\"social.vk\"\r\n                    />\r\n                    <ErrorMessage name=\"social.vk\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"inst\">Inst</label>\r\n                    <Field\r\n                        id=\"inst\"\r\n                        type=\"text\"\r\n                        name=\"social.inst\"\r\n                    />\r\n                    <ErrorMessage name=\"social.inst\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"primaryPhone\">phone 1</label>\r\n                    <Field\r\n                        id=\"primaryPhone\"\r\n                        type=\"tel\"\r\n                        name=\"telephones[0]\"\r\n                    />\r\n                    <ErrorMessage name=\"telephones\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"primaryPhone\">phone 2</label>\r\n                    <Field\r\n                        id=\"secondPhone\"\r\n                        type=\"tel\"\r\n                        name=\"telephones[1]\"\r\n                    />\r\n                    <ErrorMessage name=\"telephones\" component={TextError} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"phNumbers\">List of phone numbers</label>\r\n                    <FieldArray name={'phNumbers'}>\r\n                        {\r\n                            (fieldArrayProps) => {\r\n                                const {push, remove, form} = fieldArrayProps\r\n                                const {values} = form\r\n                                const {phNumbers} = values\r\n                                return (\r\n                                    <div>\r\n                                        {\r\n                                            phNumbers.map((phNumber, index) => (\r\n                                                <div key={index}>\r\n                                                    <Field name={`phNumbers[${index}]`} />\r\n                                                    {\r\n                                                        index > 0 &&\r\n                                                        <button type={'button'} onClick={() => remove(index)}> - </button>\r\n                                                    }\r\n                                                    <button type={'button'} onClick={() => push('')}> + </button>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    </FieldArray>\r\n                </div>\r\n\r\n                {/*type=\"submit у кнопки это важно, иначе warning будет!\"*/}\r\n                <button type=\"submit\">Submit</button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default compose(\r\n\r\n)(SignupForm)\r\n\r\n//Проверять телефон можно с помощью регулярки\r\n// const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n//\r\n// phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\r\n\r\n    // let validate = values => {\r\n    //\r\n    //     const errors = {};\r\n    //\r\n    //     if (!values.name) {\r\n    //         errors.name = 'Имя Required';\r\n    //     } else if (values.name.length > 15) {\r\n    //         errors.name = '15 символов или меньше';\r\n    //     }\r\n    //\r\n    //     if (!values.email) {\r\n    //         errors.email = 'Email Required';\r\n    //     } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    //         errors.email = 'Адрес гавно';\r\n    //     }\r\n    //     return errors;\r\n    // }\r\n\r\n    // const formik = useFormik({\r\n    //     initialValues,\r\n    //     validationSchema,\r\n    //     // validate,\r\n    //     onSubmit,\r\n    // });\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setToken} from \"../redux/test-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {FormTest} from \"../hoc/FormTest\";\r\nimport Formik from \"./Formik\";\r\nimport {format} from \"date-fns\";\r\n\r\nconst Hooks = (props) => {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const message = useSelector(state => state.test.message);\r\n\r\n    useEffect(() => {\r\n        props.setState({\r\n            name: 'hisik',\r\n            address: 'asd',\r\n            email: 'as@as.ru',\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(props.history)\r\n    });\r\n    const onSubmit = (values) => {\r\n        console.log(values)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*{message}*/}\r\n\r\n            {/*<button onClick={() => setCount(count+1)}>Нажать</button>*/}\r\n\r\n            {/*<div>*/}\r\n            {/*    Я нажал {count} раз*/}\r\n            {/*</div>*/}\r\n\r\n            <Formik {...props} onSubmit={onSubmit} />\r\n\r\n            {/*<input type=\"date\" onChange={(e) => console.log(e.target.value)}/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    FormTest,\r\n)(Hooks)\r\n","import React from 'react'\r\nimport {compose} from \"redux\";\r\nimport {YMaps, Map, TypeSelector, SearchControl, RouteButton, ZoomControl, Placemark} from 'react-yandex-maps';\r\nimport s from './MapTest.module.css'\r\n\r\nconst MapTest = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <YMaps>\r\n                <div>\r\n                    <Map className={s.map}\r\n                        defaultState={{ center: [55.75, 37.57], zoom: 16 }} >\r\n                        {/*center: [55.751574, 37.573856]*/}\r\n                        <Placemark defaultGeometry={[55.75, 37.58]}\r\n                                   defaultProperties={{iconCaption: 'Стадион тут'\r\n                                   }}\r\n                                   defaultOptions={{preset: \"islands#dotIcon\",\r\n                                       iconColor: 'blue',\r\n                                   }}\r\n                                   />\r\n                        <Placemark defaultGeometry={[55.75, 37.57]}\r\n                                   defaultProperties={{iconCaption: 'Стадион тут'\r\n                                   }}\r\n                                   defaultOptions={{preset: \"islands#dotIcon\",\r\n                                       iconColor: 'blue',\r\n                                   }}\r\n                                   />\r\n                        <Placemark defaultGeometry={[55.76, 37.58]}\r\n                                   defaultProperties={{iconCaption: 'Стадион тут'\r\n                                   }}\r\n                                   defaultOptions={{preset: \"islands#dotIcon\",\r\n                                       iconColor: 'blue',\r\n                                   }}\r\n                                   />\r\n                        <Placemark />\r\n                        <ZoomControl defaultOptions={{size: \"large\"}}/>\r\n                        <TypeSelector />\r\n\r\n                    </Map>\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n\r\n)(MapTest)\r\n","import React from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromRaw, ContentState } from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nconst content = {\r\n    \"entityMap\":{\r\n\r\n    },\r\n    \"blocks\":[\r\n        {\r\n            \"key\":\"637gr\",\r\n            \"text\":\"Initialized from content state.\",\r\n            \"type\":\"unstyled\",\r\n            \"depth\":0,\r\n            \"inlineStyleRanges\":[\r\n\r\n            ],\r\n            \"entityRanges\":[\r\n\r\n            ],\r\n            \"data\":{\r\n\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass Wysiwyg extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const contentState = content;\r\n        const editorState = EditorState.createWithContent(convertFromRaw(content));\r\n\r\n        this.state = {\r\n            editorState,\r\n            contentState,\r\n            readOnly: false,\r\n        };\r\n\r\n        this.onContentStateChange = this.onContentStateChange.bind(this)\r\n        this.onEditorStateChange = this.onEditorStateChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    onContentStateChange(contentState) {\r\n        this.setState({\r\n            contentState,\r\n        });\r\n    };\r\n    onEditorStateChange(editorState) {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n    handleSubmit() {\r\n        console.log(this.state.contentState)\r\n        console.log(this.state.editorState)\r\n    };\r\n\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        debugger\r\n        return (\r\n            <>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    readOnly = {this.state.readOnly}\r\n                    toolbarHidden = {this.state.readOnly}\r\n                    // wrapperClassName=\"demo-wrapper\"\r\n                    // editorClassName=\"demo-editor\"\r\n                    onContentStateChange={this.onContentStateChange}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                />\r\n                <button onClick={this.handleSubmit}>\r\n                    submit\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Wysiwyg\r\n","import React from 'react'\r\nimport s from './Print.module.scss'\r\n\r\nconst ComponentToPrint = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ComponentToPrint\r\n","import React from 'react'\r\nimport Printer, { print } from 'react-pdf-print'\r\nimport ReactToPrint from 'react-to-print';\r\nimport s from './Print.module.scss'\r\nimport ComponentToPrint from \"./ComponentToPrint\";\r\n\r\nclass Print extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ReactToPrint\r\n                    trigger={() => {\r\n                        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n                        // to the root node of the returned component as it will be overwritten.\r\n                        return <a href=\"#\">Print this out!</a>;\r\n                    }}\r\n                    content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={el => (this.componentRef = el)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Print\r\n","import React, {useState} from \"react\";\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport Camera, {FACING_MODES} from 'react-html5-camera-photo';\r\n\r\nconst CameraPhoto = (props) => {\r\n\r\n    const [photo, setPhoto] = useState('')\r\n\r\n    function handleTakePhoto (dataUri) {\r\n        setPhoto(dataUri)\r\n        console.log('takePhoto');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Camera\r\n                idealFacingMode = {FACING_MODES.ENVIRONMENT}\r\n                isFullscreen = {false}\r\n                onTakePhoto = { (dataUri) => { handleTakePhoto(dataUri); } }\r\n            />\r\n            {\r\n                photo !== '' &&\r\n                    <div>\r\n                        <img src={photo} alt=\"photo\"/>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CameraPhoto\r\n","import React from 'react'\nimport './App.css';\nimport YupInputs from \"./Components/YupInputs\";\nimport Hooks from \"./Components/Hooks\";\nimport MapTest from \"./Components/MapTest/MapTest\";\nimport Wysiwyg from \"./Components/TextEditor/Wysiwyg\";\nimport Test from \"./Components/Test\";\nimport SignupForm from \"./Components/Formik\";\nimport Print from \"./Components/Print/Print\";\nimport Search from \"./Components/Search/Search\";\nimport CameraPhoto from \"./Components/CameraPhoto/CameraPhoto\";\n\nclass App extends React.Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <>\n                {/*<YupInputs />*/}\n                {/*<Hooks />*/}\n                {/*<SignupForm />*/}\n                {/*<TextEditor />*/}\n                {/*<Wysiwyg />*/}\n                {/*<Test />*/}\n                {/*<MapTest />*/}\n                {/*<Print />*/}\n                <CameraPhoto />\n                {/*<Search />*/}\n            </>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport testReducer from \"./test-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    test: testReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Common/style.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\"\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2UkLC\",\"searchItem\":\"Search_searchItem__1bZaf\",\"tagContainer\":\"Search_tagContainer__1lstU\",\"tag\":\"Search_tag__26dJw\",\"tagItem\":\"Search_tagItem__1vMUa\",\"tagBtn\":\"Search_tagBtn__zLVn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__3hC6X\",\"elements\":\"Test_elements__23QkE\"};"],"sourceRoot":""}